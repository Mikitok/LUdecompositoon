function [Xtrn, Ytrn, Xtst] =  processing( X_trn, Y_trn, X_tst, method, lda, k )
%  X_trn是训练样本集
%  Y_trn是训练样本对应的标签
%  X_tst是测试样本集
%  method 是表示图像分解的方法，有lu, svd, lu_svd三个选项，默认lu
%  lda是表示lda的方法：有left_lda，right_lda，bdlda三种，默认为left_lda
%  t是表示用第几个作训练样本，默认是1
%  k是一个二维数组，第一个表示left_lda降的维数，第二个表示right_lda降的维数，默认为[15，15]

%  Xtrn是处理后的训练样本
%  Xtst是处理后的测试样本
if nargin>6||nargin<3     help processing; exit;      end
if nargin<6     k=[15,15];      end
if nargin<5     lda='left_lda';   end
if nargin<4     method='lu';    end

numtrn=length(X_trn);
numtst=length(X_tst);
switch lower(method)
    case 'lu'
        [X_dec,Y_dec]=ludecomposition(X_trn,Y_trn);
    case 'svd'
        [X_dec,Y_dec]=svddecomposition(X_trn,Y_trn);
    case 'lu_svd'
        [X_svd,Y_svd]=svddecomposition(X_trn,Y_trn);
        [X_lu, Y_lu] = ludecomposition( X_trn, Y_trn );
        X_dec=cell(4*numtrn,1);
        Y_dec=zeros(4*numtrn,1);
        count1=1;
        count2=2;
        for i=1:numtrn*4
            if (rem(i,4)==0)
                X_dec{i}=X_svd{count2};
                Y_dec(i)=Y_svd(count2);
                count2=count2+2;
            else
                X_dec{i}=X_lu{count1};
                Y_dec(i)=Y_lu(count1);
                count1=count1+1;
            end
        end
    otherwise
         help processing; 
         exit;
end

switch lower(lda)
    case
end
end

